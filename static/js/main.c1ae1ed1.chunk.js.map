{"version":3,"sources":["components/Counter/styled.jsx","components/Button/styled.tsx","components/Button/index.tsx","components/Counter/index.jsx","components/EmployeeManagment/EmployeeTable/styled.tsx","constant/index.tsx","helpers/index.tsx","components/EmployeeManagment/EmployeeTable/index.tsx","components/Title/styled.tsx","components/Title/index.tsx","components/Input/styled.tsx","components/Input/index.tsx","components/ErrorMessage/styled.tsx","components/ErrorMessage/index.tsx","components/EmployeeManagment/EmployeeForm/styled.tsx","components/EmployeeManagment/EmployeeForm/index.tsx","components/Spinner/styled.tsx","components/Spinner/index.tsx","components/EmployeeManagment/styled.tsx","api/index.tsx","components/EmployeeManagment/constant.tsx","components/EmployeeManagment/index.tsx","components/SideBar/styled.tsx","components/SideBar/index.tsx","styled.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CounterStyled","styled","div","StyledButton","button","Button","props","className","text","onClick","Counter","useState","clicks","setClicks","StyledEmployeeTable","BASE_URL","INCORRECT_EMAIL","NOT_EMPTY","field","REGEX_EMAIL","getTotalPages","totalItem","itemPerPage","Math","floor","isCorrectEmail","value","RegExp","test","trim","renderPagination","totalItems","currentPageIndex","fetchEmployeeList","totalPages","results","i","push","map","rs","EmployeeTable","employeeList","total","getDetailEmployee","deleteEmployee","length","id","name","email","position","StyledTitle","h1","Title","StyledInput","input","Input","type","placeholder","onChange","StyledErrorMessage","p","ErrorMessage","errors","StyledEmployeeForm","EmployeeForm","formData","handleInput","submitForm","closeEmployee","spin","keyframes","SpinnerStyled","Spinner","loading","children","StyledEmployeeManagement","StyledModal","Modal","apiClient","axios","create","baseURL","timeout","headers","interceptors","request","use","config","error","Promise","reject","response","message","messageContent","status","fetchListApi","page","get","getDetailApi","deleteItemApi","delete","initErrors","initFormData","keysForm","setAppElement","EmployeeManagement","addToast","useToasts","showErrorNotification","appearance","autoDismiss","showSuccessNotification","setEmployeeList","setTotal","setCurrentPageIndex","setFormData","originDetailEmployee","setOriginDetailEmployee","setErrors","setLoading","isOpen","setIsOpen","then","res","list","_","catch","useEffect","a","data","event","target","isEmailCorrect","checkEmail","errorsTemp","key","Object","values","some","val","put","post","createItemApi","lastPageIndex","saveEmp","StyledSideBar","ul","SideBar","exact","to","StyledMainContent","App","autoDismissTimeout","placement","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c1ae1ed1.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const CounterStyled = styled.div`\n  h1 {\n    font-size: 18px;\n    margin: 0 0 15px;\n  }\n\n  .count {\n    margin-left: 10px;\n    color: #329252;\n    font-weight: bold;\n  }\n`;","import styled from 'styled-components';\n\nexport const StyledButton = styled.button`\n  border-radius: 5px;\n  border: none;\n  font-weight: bold;\n  font-size: 14px;\n  cursor: pointer;\n  background-color: #ddd;\n  color: #121212ab;\n  height: 30px;\n  min-width: 100px;\n  transition: all 0.2s ease;\n  text-align: center;\n\n  &:hover {\n    background-color: #b3afaf;\n  }\n\n  &.small {\n    min-width: 70px;\n    font-size: 13px;\n    height: 25px;\n  }\n\n  &.primary {\n    background-color: #329252;\n    color: #fff;\n    &:hover {\n      background-color: #2a7744;\n    }\n  }\n\n  &.secondary {\n    background-color: #1890ff;\n    color: #fff;\n    &:hover {\n      background-color: #2683da;\n    }\n  }\n\n  &.danger {\n    background-color: #ff4d4f;\n    color: #fff;\n    &:hover {\n      background-color: #da3b3d;\n    }\n  }\n`;","import React from 'react';\nimport { StyledButton } from './styled';\n\ninterface ButtonProps {\n  className?: string;\n  text: string;\n  onClick?: () => void;\n};\nconst Button = (props: ButtonProps) => {\n  const { className, text, onClick } = props;\n  return (\n    <StyledButton\n      className={className}\n      onClick={onClick}\n    >\n      {text}\n    </StyledButton>\n  );\n};\n\nexport default Button;","import React, { useState } from 'react';\nimport { CounterStyled } from './styled';\nimport Button from './../Button/index'\n\nconst Counter = () => {\n  const [clicks, setClicks] = useState(0);\n  return (\n    <CounterStyled>\n      <h1 className=\"title\">\n        Counter:\n        <span className=\"count\">{clicks}</span>\n      </h1>\n      <Button\n        className=\"primary mr-15\"\n        onClick={() => setClicks(clicks+1)}\n        text=\"Increase\"\n      />\n      <Button\n        onClick={() => setClicks(0)}\n        text=\"Reset\"\n      />\n    </CounterStyled>\n  );\n}\nexport default Counter;","import styled from 'styled-components';\n\nexport const StyledEmployeeTable = styled.div`\n  width: 100%;\n  .table-wrap {\n    margin-bottom: 25px;\n  }\n\n  table {\n    border: 1px solid rgb(220,224,233);\n    border-collapse: collapse;\n    border-radius: 2px 2px 0 0;\n    border-spacing: 0;\n    text-align: center;\n    width: 100%;\n    font-size: 14px;\n\n    th {\n      width: 25%;\n    }\n\n    th, td {\n      border: 1px solid rgb(220,224,233);\n      border-collapse: collapse;\n      padding: 15px 20px;\n    }\n\n    td {\n      &.td-name,\n      &.td-position {\n        text-transform: capitalize;\n      }\n    }\n  }\n\n  .no-data {\n    text-align: center;\n    margin: 0;\n    padding: 70px 15px;\n    border: 1px solid rgb(220, 224, 233);\n    border-top: none;\n  }\n\n  .pagination {\n    ul {\n      display: flex;\n      list-style-type: none;\n      justify-content: center;\n\n      li {\n        padding: 3px 8px;\n        margin: 0 5px;\n        background-color: #ddd;\n        color: white;\n        border-radius: 2px;\n        width: 15px;\n        text-align: center;\n        height: 18px;\n        line-height: 16px;\n        cursor: pointer;\n        transition: all 0.2s ease;\n        font-size: 13px;\n\n        &:hover {\n          background-color: #b3afaf;\n        }\n        \n        &.active {\n          background-color: #329252;\n\n          &:hover {\n            background-color: #2a7744;\n          }\n\n        }\n      }\n    }\n  }\n`;","export const BASE_URL = 'https://609e1e8533eed80017957b45.mockapi.io/users';\n\nexport const ITEM_PER_PAGE = 5;\n\nexport const INCORRECT_EMAIL = 'Email is not correct';\nexport const NOT_EMPTY = (field: string) => `${field} must not be empty`;\n\nexport const REGEX_EMAIL = /^([A-Za-z0-9.]){1,40}@([A-Za-z0-9.]){1,40}$/;\n\nexport const CREATED_SUCCESS = 'Created an employee successfully';\nexport const EDITED_SUCCESS = 'Edited an employee successfully';\nexport const DELETED_SUCCESS = 'Deleted an emloyee successfully';\nexport const NO_DATA_CHANGE = 'NO data change';\n","import { REGEX_EMAIL } from './../constant/index';\n\nexport const getTotalPages = (totalItem: number, itemPerPage: number) => {\n  if (!totalItem) return 0;\n  const num1 = Math.floor(totalItem / itemPerPage);\n  const num2 = totalItem / itemPerPage - Math.floor(totalItem / itemPerPage);\n  const totalPage = num1 + (num2 > 0 ? 1 : 0);\n  return totalPage;\n}\n\nexport const isCorrectEmail = (value: string) => {\n  const newRegex = new RegExp(REGEX_EMAIL);\n  return newRegex.test(value.trim());\n};","import React from 'react';\nimport { StyledEmployeeTable } from './styled';\nimport Button from '../../Button/index';\nimport { getTotalPages } from '../../../helpers/index';\nimport { ITEM_PER_PAGE } from '../../../constant/index';\n\ninterface IEmployee {\n  id: string;\n  name: string;\n  email: string;\n  position: string;\n}\n\ninterface IEmployeeTableProps {\n  employeeList: Array<IEmployee>;\n  total: number;\n  currentPageIndex: number;\n  getDetailEmployee: (id: string) => void;\n  deleteEmployee: (id: string) => void;\n  fetchEmployeeList: (id: number) => void;\n}\n\nconst renderPagination = (\n  totalItems:number,\n  currentPageIndex: number,\n  fetchEmployeeList: Function) => {\n  const totalPages = getTotalPages(totalItems, ITEM_PER_PAGE);\n  let results = [];\n  for (let i = 1; i <= totalPages; i++) {\n    results.push(i);\n  }\n  return (\n    <ul>\n      {\n        results.map(rs=>\n          <li\n            onClick={() => fetchEmployeeList(rs)}\n            key={rs}\n            className={`${currentPageIndex === rs ? 'active' : ''}`}\n          >\n            {rs}\n          </li>\n        )\n      }\n    </ul>\n  );\n} \n\nconst EmployeeTable = (props: IEmployeeTableProps) => {\n  const {\n    employeeList,\n    total,\n    currentPageIndex,\n    getDetailEmployee,\n    deleteEmployee,\n    fetchEmployeeList,\n  } = props;\n  return (\n    <StyledEmployeeTable>\n      <div className=\"table-wrap\">\n        <table>\n          <thead>\n            <tr>\n              <th className=\"th emp-name\">Name</th>\n              <th className=\"th emp-email\">Email</th>\n              <th className=\"th emp-postion\">Position</th>\n              <th className=\"th emp-action\">Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            {employeeList.length > 0 &&\n              employeeList.map(({id, name, email, position})=>(\n              <tr key={id}>\n                <td className=\"td td-name\">{name}</td>\n                <td className=\"td td-email\">{email}</td>\n                <td className=\"td td-position\">{position}</td>\n                <td className=\"td td-action\">\n                  <Button\n                    className=\"primary small mr-15\"\n                    onClick={() => getDetailEmployee(id)}\n                    text=\"Edit\"\n                  />\n                  <Button\n                    className=\"danger small\"\n                    onClick={() => deleteEmployee(id)}\n                    text=\"Delete\"\n                  />\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n        {!employeeList.length && <p className=\"no-data\">No employee</p>}\n      </div>\n      <div className=\"pagination\">\n        {\n          employeeList.length > 0 &&\n          renderPagination(total, currentPageIndex, fetchEmployeeList)\n        }\n      </div>\n    </StyledEmployeeTable>\n  );\n}\nexport default EmployeeTable;","import styled from 'styled-components';\n\nexport const StyledTitle = styled.h1`\n  font-size: 18px;\n  margin: 0 0 30px;\n  color: #329252;\n  font-weight: bold;\n`;","import React from 'react';\nimport { StyledTitle } from './styled';\n\ninterface ITitle {\n  text: string;\n}\n\nconst Title = (props: ITitle) => {\n  const { text } = props;\n  return (\n      <StyledTitle>\n        {text}\n      </StyledTitle>\n  );\n}\nexport default Title;","import styled from 'styled-components';\n\nexport const StyledInput = styled.input`\n  width: 100%;\n  height: 40px;\n  margin-top: 5px;\n  margin-bottom: 20px;\n  padding: 0 15px;\n  width: 100%;\n  color: rgba(0, 0, 0, 0.87);\n  font-size: 14px;\n  background-color: #fff;\n  border: 1px solid #d9d9d9;\n  border-radius: 4px;\n\n  &[type='number']::-webkit-inner-spin-button,\n  &[type='number']::-webkit-outer-spin-button {\n    -webkit-appearance: none;\n  }\n\n  &:focus {\n    outline: none;\n  }\n`;","import React from \"react\";\nimport { StyledInput } from \"./styled\";\n\ninterface InputProps {\n    type: string;\n    name: string;\n    value?: string;\n    placeholder?: string;\n    onChange?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nconst Input = (props: InputProps) => {\n  const {\n    type,\n    name,\n    value,\n    placeholder,\n    onChange\n  } = props;\n  return (\n    <StyledInput\n      type={type}\n      name={name}\n      value={value}\n      placeholder={placeholder}\n      onChange={onChange}\n    />\n  );\n};\n\nexport default Input;\n","import styled from 'styled-components';\n\nexport const StyledErrorMessage = styled.p`\n  font-size: 13px;\n  margin: 5px;\n  color: #ff4d4f;\n  font-weight: 500;\n  &&::first-letter {\n    text-transform: uppercase;\n  }\n`;","import React from 'react';\nimport { StyledErrorMessage } from './styled';\n\ntype errorsType = {\n  [key: string]: string\n}\n\ninterface ErrorMessageProps {\n  errors: errorsType;\n  name: string;\n}\n\n\nconst ErrorMessage = (props: ErrorMessageProps) => {\n  const {errors, name } = props;\n  if (errors[name].length)\n    return (\n      <StyledErrorMessage>\n        {errors[name]}\n      </StyledErrorMessage>\n    );\n  return null;\n}\nexport default ErrorMessage;","import styled from 'styled-components';\n\nexport const StyledEmployeeForm = styled.div`\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 40px 20px;\n\n  input {\n    margin: 0;\n    width: 92%;\n  }\n\n  form {\n    > div {\n      margin-bottom: 10px;\n    }\n  }\n\n  .close-btn {\n    position: absolute;\n    top: 15px;\n    right: 15px;\n    min-width: 55px;\n    font-size: 12px;\n    height: 25px;\n    margin-right: 0;\n  }\n\n  .button-wrap {\n    padding-top: 30px;\n    text-align: center;\n  }\n`;","import React from 'react';\nimport Title from '../../Title/index';\nimport Button from '../../Button/index';\nimport Input from '../../Input/index';\nimport ErrorMessage from '../../ErrorMessage/index';\nimport { StyledEmployeeForm } from './styled';\n\ntype formType = {\n  [key: string]: string\n}\n\ntype errorsType = {\n  [key: string]: string\n}\n\ninterface IEmloyeeForm {\n  formData: formType;\n  errors: errorsType;\n  handleInput: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  submitForm: () => void;\n  closeEmployee: () => void;\n}\n\nconst EmployeeForm = (props: IEmloyeeForm) => {\n  const {\n    formData,\n    errors,\n    handleInput,\n    submitForm,\n    closeEmployee\n  } = props;\n  return (\n      <StyledEmployeeForm>\n        <Title\n          text={\n            `${formData && formData.id ? \n              'Edit an employee' : 'New employee'}`\n          }\n        />\n        <Button\n          className=\"close-btn\"\n          onClick={closeEmployee}\n          text=\"Close\"\n        />\n        <form>\n          <div>\n            <Input\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Alex\"\n              value={formData.name}\n              onChange={handleInput}\n            />\n            <ErrorMessage\n              errors={errors}\n              name=\"name\"\n            />\n          </div>\n          <div>\n            <Input\n              type=\"text\"\n              name=\"email\"\n              placeholder=\"Example@example.com\"\n              value={formData.email}\n              onChange={handleInput}\n            />\n            <ErrorMessage\n              errors={errors}\n              name=\"email\"\n            />\n          </div>\n          <div>\n            <Input\n              type=\"text\"\n              name=\"position\"\n              placeholder=\"Software Engineer\"\n              value={formData.position}\n              onChange={handleInput}\n            />\n            <ErrorMessage\n              errors={errors}\n              name=\"position\"\n            />\n          </div>\n        </form>\n        <div className=\"button-wrap\">\n          <Button\n            className=\"primary\"\n            onClick={submitForm}\n            text=\"Save\"\n          />\n        </div>\n      </StyledEmployeeForm>\n  );\n}\nexport default EmployeeForm;","import styled, { keyframes } from 'styled-components';\n\nconst spin = keyframes`\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n`;\n\nexport const SpinnerStyled = styled.div`\n  position: relative;\n  .d-none {\n    display: none;\n  }\n  \n  .loading {\n    position: fixed;\n    top: 0;\n    right: 0;\n    left: 0;\n    bottom: 0;\n    width: 100%;\n    height: 100%;\n    z-index: 10;\n    background-color: rgba(0, 0, 0, 0.41);\n  }\n  \n  .icon-spinner {\n    border: 10px solid #f3f3f3;\n    border-radius: 50%;\n    border-top: 10px solid #329252;\n    width: 30px;\n    height: 30px;\n    animation: ${spin} 2s linear infinite;\n    position: absolute;\n    top: 38%;\n    left: 48.5%;\n    transform: translate(-50%, -50%);\n  }\n`;\n\n\n","import React from 'react';\nimport { SpinnerStyled } from './styled';\n\ninterface ISpinner {\n  loading: boolean;\n  children: React.ReactNode;\n}\n\nconst Spinner = (props: ISpinner) => {\n  const { loading = false, children } = props;\n  return (\n      <SpinnerStyled>\n        <div\n          className={`${loading ? 'loading' : 'd-none'}`}\n        >\n          <div className=\"icon-spinner\" />\n        </div>\n        {children}\n      </SpinnerStyled>\n  );\n}\nexport default Spinner;","import styled from 'styled-components';\nimport Modal from 'react-modal';\n\nexport const StyledEmployeeManagement = styled.div`\n  width: 80%;\n  .new-wrap {\n    text-align: right;\n    padding-bottom: 30px;\n  }\n`;\n\nexport const StyledModal = styled(Modal)`\n  .modal-inner {\n    width: 600px;\n    height: 500px;\n    background-color: #fff;\n    border-radius: 10px;\n    padding: 15px;\n    margin: 0 auto;\n    top: 40%;\n    left: 50%;\n    position: absolute;\n    transform: translate(-50%, -50%);\n    border: 1px solid #ddd;\n  }\n`;\n","import axios from 'axios';\nimport { BASE_URL } from '../constant/index';\n\ntype formType = {\n  [key: string]: string\n}\n\nconst apiClient = axios.create({\n  baseURL: BASE_URL,\n  timeout: 30000,\n  headers: {\n    'Content-Type': 'application/json;charset=UTF-8',\n    'Accept-Language': 'en',\n  },\n});\n\napiClient.interceptors.request.use(\n  (config) => config,\n  (error) => {\n    Promise.reject(error);\n  },\n);\n\n// RESPONSE INTERCEPTOR\napiClient.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  // error converter\n  (error) => {\n    if (error.response) {\n      const { status } = error.response;\n      if (status >= 400 && status <= 499) {\n        return Promise.reject({\n          messageContent: 'API resource not found'\n        });\n      } else if (status >= 500 && status <= 599) {\n        return Promise.reject({\n          messageContent: 'API internal server Error',\n        });\n      }\n    } else if (error.message === 'Network Error') {\n      return Promise.reject({\n        messageContent: 'Network Error',\n      });\n    } else {\n      return Promise.reject(error);\n    }\n  },\n);\n\nexport const fetchListApi = (page: number) =>\n  apiClient.get(`${BASE_URL}/?page=${page}&limit=5`);\n\nexport const getDetailApi = (id: string) =>\n  apiClient.get(`${BASE_URL}/${id}`);\n\nexport const createItemApi = (data: formType) =>\n  apiClient.post(BASE_URL, data);\n\nexport const editItemApi = (data: formType) =>\n  apiClient.put(`${BASE_URL}/${data.id}`, data);\n\nexport const deleteItemApi = (id: string) =>\n  apiClient.delete(`${BASE_URL}/${id}`);\n","export type formType = {\n  [key: string]: string\n}\n\nexport type errorsType = {\n  [key: string]: string\n}\n\nexport const initErrors: errorsType = {\n  name: '',\n  email: '',\n  position: '',\n}\n\nexport const initFormData: formType = {\n  name: '',\n  email: '',\n  position: '',\n};\n\nexport const keysForm: Array<string> =\n  ['name', 'email', 'position'];\n","import React, {\n  useState,\n  useEffect\n} from 'react';\nimport Modal from 'react-modal';\nimport * as _ from 'lodash';\nimport { useToasts } from 'react-toast-notifications'\nimport EmployeeTable from './EmployeeTable/index';\nimport EmployeeForm from './EmployeeForm/index';\nimport Spinner from '../Spinner/index';\nimport Title from '../Title/index';\nimport Button from '../Button/index';\nimport {\n  StyledEmployeeManagement,\n  StyledModal\n} from './styled';\nimport {\n  fetchListApi,\n  getDetailApi,\n  deleteItemApi,\n  createItemApi,\n  editItemApi,\n} from '../../api/index';\nimport {\n  initErrors,\n  initFormData,\n  errorsType,\n  keysForm,\n} from './constant';\nimport {\n  CREATED_SUCCESS,\n  EDITED_SUCCESS,\n  DELETED_SUCCESS,\n  ITEM_PER_PAGE,\n  NOT_EMPTY,\n  INCORRECT_EMAIL,\n  NO_DATA_CHANGE,\n} from '../../constant/index';\nimport {\n  getTotalPages,\n  isCorrectEmail\n} from '../../helpers/index'\n\nconst EmployeeManagement = () => {\n  const { addToast } = useToasts();\n\n  const showErrorNotification = (text: string) =>\n    addToast(text, {\n      appearance: 'error',\n      autoDismiss: true,\n    });\n  \n  const showSuccessNotification = (text: string) =>\n    addToast(text, {\n      appearance: 'success',\n      autoDismiss: true,\n    });\n\n  const [employeeList, setEmployeeList] = useState([]);\n  const [total, setTotal] = useState(0);\n  const [currentPageIndex, setCurrentPageIndex] = useState(1);\n  const [formData, setFormData] = useState(initFormData);\n  const [originDetailEmployee, setOriginDetailEmployee] = useState(initFormData);\n  const [errors, setErrors] = useState(initErrors);\n  const [loading, setLoading] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const fetchEmployeeList = (page = 1) => {\n    setLoading(true);\n    fetchListApi(page < 1 ? 1 : page)\n      .then(res => {\n        const list = _.get(res, 'data.list', []);\n        const total = _.get(res, 'data.total', 0);\n        setCurrentPageIndex(page);\n        setTotal(total);\n        setEmployeeList(list);\n        setLoading(false);\n      })\n      .catch((error) => {\n        showErrorNotification(error.messageContent);\n        setLoading(false);\n      });\n  };\n\n  useEffect(() => {\n    fetchEmployeeList();\n    // No need dependency\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const getDetailEmployee = async (id:string) => {\n    setIsOpen(true);\n    setLoading(true);\n    getDetailApi(id)\n      .then(res => {\n        setOriginDetailEmployee(res.data);\n        setFormData(res.data);\n        setLoading(false);\n      })\n      .catch((error) => {\n        showErrorNotification(error.messageContent);\n        setLoading(false);\n      });\n  };\n\n  const deleteEmployee = async (id:string) => {\n    setLoading(true);\n    deleteItemApi(id)\n      .then(res => {\n        if (!_.isEmpty(res.data)) {\n          showSuccessNotification(DELETED_SUCCESS);\n          if (employeeList.length === 1) {\n            fetchEmployeeList(currentPageIndex - 1);\n          } else {\n            fetchEmployeeList(currentPageIndex);\n          }\n          setLoading(false);\n        }\n      })\n      .catch((error) => {\n        showErrorNotification(error.messageContent);\n        setLoading(false);\n      });\n  };\n\n  const checkEmail = (value: string) => {\n    if (value.trim() === '')\n      setErrors({\n        ...errors,\n        email: NOT_EMPTY('email')\n      });\n    else {\n      const isEmailCorrect = isCorrectEmail(value);\n      setErrors({\n        ...errors,\n        email: isEmailCorrect ? '' : INCORRECT_EMAIL\n      });\n    }\n  }\n\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n\n    if (name === 'email') {\n      checkEmail(value);\n    } else {\n      setErrors({\n        ...errors,\n        [name]: value.trim() ? '' : NOT_EMPTY(name)\n      });\n    }\n  };\n\n  const submitForm = () => {\n    const id = _.get(formData, 'id', '');\n    if (id) {\n      if (_.isEqual(originDetailEmployee, formData)) {\n        addToast(NO_DATA_CHANGE, {\n          appearance: 'warning',\n          autoDismiss: true,\n        });\n        return;\n      }\n    }\n\n    let errorsTemp: errorsType = {};\n    for (let key of keysForm) {\n      if (key === 'email') {\n        errorsTemp[key] =\n          !formData[key].trim().length ?\n          NOT_EMPTY(key) : !isCorrectEmail(formData[key]) ? \n          INCORRECT_EMAIL : '';\n      } else {\n        errorsTemp[key] = formData[key].length ? '' : NOT_EMPTY(key);\n      }\n    }\n\n    setErrors(errorsTemp);\n\n    const isErrors = Object.values(errorsTemp).some((val) => val !== '');\n    if (isErrors)\n      return;\n\n    const saveEmp = () => {\n      setLoading(true);\n      if (id) {\n        editItemApi(formData)\n          .then(res => {\n            if (!_.isEmpty(res.data)) {\n              showSuccessNotification(EDITED_SUCCESS);\n              fetchEmployeeList(currentPageIndex);\n              setLoading(false);\n              closeEmployee();\n            }\n          })\n          .catch((error) => {\n            showErrorNotification(error.messageContent);\n            setLoading(false);\n          });\n      } else {\n        createItemApi(formData)\n          .then(res => {\n            if (!_.isEmpty(res.data)) {\n              showSuccessNotification(CREATED_SUCCESS);\n              setLoading(false);\n              const lastPageIndex = getTotalPages(total, ITEM_PER_PAGE);\n              if (total % ITEM_PER_PAGE === 0) {\n                fetchEmployeeList(lastPageIndex + 1);\n              } else {\n                fetchEmployeeList(lastPageIndex);\n              }\n              closeEmployee();\n            }\n          })\n          .catch((error) => {\n            showErrorNotification(error.messageContent);\n            setLoading(false);\n          });\n      }\n    };\n    saveEmp();\n  };\n\n  const closeEmployee = () => {\n    setIsOpen(false);\n    setFormData(initFormData);\n    setErrors(initErrors);\n    setLoading(false);\n  };\n\n  return (\n    <Spinner loading={loading}>\n      <StyledEmployeeManagement>\n        <Title text=\"Employee Management\" />\n        <div className=\"new-wrap\">\n          <Button\n            className=\"secondary\"\n            onClick={() => setIsOpen(true)}\n            text=\"New\"\n          />\n        </div>\n        <EmployeeTable\n          employeeList={employeeList}\n          total={total}\n          currentPageIndex={currentPageIndex}\n          getDetailEmployee={getDetailEmployee}\n          deleteEmployee={deleteEmployee}\n          fetchEmployeeList={fetchEmployeeList}\n        />\n\n        <StyledModal isOpen={isOpen} >\n          <div className=\"modal-inner\">\n            <EmployeeForm\n              formData={formData}\n              errors={errors}\n              handleInput={handleInput}\n              submitForm={submitForm}\n              closeEmployee={closeEmployee}\n            />\n          </div>\n        </StyledModal>\n      </StyledEmployeeManagement>\n    </Spinner>\n\n  )\n}\n\nModal.setAppElement(\"#root\");\nexport default EmployeeManagement;","import styled from 'styled-components';\n\nexport const StyledSideBar = styled.ul`\n  position: fixed;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  width: 200px;\n  top: 0;\n  left: 0;\n  border-right: 1px solid rgb(220, 224, 233);\n  background-color: #dadada;\n  font-weight: bold;\n  padding: 50px 20px;\n  margin: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: baseline;\n  list-style-type: none;\n  justify-content: left;\n\n  .name-app {\n    text-transform: uppercase;\n    color: #329252;\n    font-size: 20px;\n  }\n\n  li {\n    margin-bottom: 15px;\n  }\n\n  a {\n    text-decoration: none;\n    color: #333;\n    font-size: 14px;\n    transition: color 0.2s ease;\n    &:hover {\n      color: #329252;\n    }\n    &.active {\n      color: #329252;\n    }\n  }\n`;","import React from 'react';\nimport {\n  NavLink\n} from 'react-router-dom';\nimport { StyledSideBar } from './styled';\n\nfunction SideBar() {\n  return (\n    <StyledSideBar>\n      <li className=\"name-app\">HOMEWORK</li>\n      <li>\n        <NavLink exact to=\"/\">Counter</NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/employee-management\">Employee</NavLink>\n      </li>\n    </StyledSideBar>\n  );\n}\n\nexport default SideBar;\n","import styled from 'styled-components';\n\nexport const StyledMainContent = styled.div`\n  padding: 50px 20px;\n  margin-left: 270px;\n  width: calc(100% - 270px);\n`;","import React from 'react';\nimport './App.css';\nimport Counter from './components/Counter/index';\nimport EmployeeManagement from './components/EmployeeManagment/index';\nimport SideBar from './components/SideBar/index';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\nimport { ToastProvider } from 'react-toast-notifications';\nimport { StyledMainContent } from './styled';\n\nfunction App() {\n  return (\n    <ToastProvider\n      autoDismiss\n      autoDismissTimeout={1500}\n      placement=\"top-right\"\n    >\n      <div>\n        <Router>\n          <div>\n            <SideBar />\n            <StyledMainContent>\n              <Switch>\n                <Route exact path=\"/\">\n                  <Counter />\n                </Route>\n                <Route path=\"/employee-management\">\n                  <EmployeeManagement />\n                </Route>\n              </Switch>\n            </StyledMainContent>\n          </div>\n        </Router>\n      </div>\n    </ToastProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}